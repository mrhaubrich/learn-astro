---
import Logo from '~/components/Logo.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';

import { getHomePermalink, trimSlash } from '~/utils/permalinks';

export interface Props {
  id?: string;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  position?: string;
}

const links = [
  { text: 'Home', href: '#home' },
  { text: 'About', href: '#about' },
  { text: 'Resume', href: '#resume' },
  { text: 'Porfolio', href: '#porfolio' },
  { text: 'Github', href: 'https://github.com/mrhaubrich', target: '_blank' },
];

const {
  id = 'header',
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 mx-auto w-full flex-none border-b border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative mx-auto w-full px-3 py-3 text-default md:px-6',
      {
        'md:flex md:justify-between': position !== 'center',
      },
      {
        'md:grid md:grid-cols-3 md:items-center': position === 'center',
      },
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:ml-auto rtl:mr-0': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="hidden w-full items-center overflow-y-auto overflow-x-hidden text-default md:mx-5 md:flex md:w-auto md:justify-self-center md:overflow-x-auto md:overflow-y-visible"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col text-xl font-medium tracking-[0.01rem] md:w-auto md:flex-row md:justify-center md:self-center md:text-[0.9375rem]"
      >
        {
          links.map(({ text, href, target }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {
                <a
                  class:list={[
                    'hover:text-link flex items-center px-4 py-3 dark:hover:text-white',
                    { 'aw-link-active': href === currentPath },
                  ]}
                  href={href}
                  target={target}
                >
                  {text}
                </a>
              }
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'fixed bottom-0 left-0 hidden w-full items-center justify-end p-3 md:static md:mb-0 md:flex md:w-auto md:self-center md:justify-self-end md:p-0 rtl:left-auto rtl:right-0',
      ]}
    >
      <div class="flex w-full items-center justify-between md:w-auto">
        <div class="flex">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
        </div>
      </div>
    </div>
  </div>
</header>
